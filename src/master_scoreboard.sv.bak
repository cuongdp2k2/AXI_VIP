`include "package.sv"
`include "master_seq_item.sv"
`include "master_monitor.sv"
`include "sub_monitor.sv"
`uvm_analysis_imp_decl (_PORT_A)
`uvm_analysis_imp_decl (_PORT_B)

class master_scoreboard extends uvm_scoreboard;
    master_seq_item master_items[$] ;
    master_seq_item sub_items[$]    ;
    virtual axi_write_if vif ;
    `uvm_component_utils(master_scoreboard) ;
    uvm_analysis_imp_PORT_A #(master_seq_item, master_scoreboard) analysis_imp_master;
    uvm_analysis_imp_PORT_B #(master_seq_item, master_scoreboard) analysis_imp_slave;
    function new(string name="master_scoreboard", uvm_component parent=null);
        super.new(name,parent);
        analysis_imp_master = new("analysis_imp_master",this) ;
        analysis_imp_slave  = new("analysis_imp_slave"   ,this) ;
        if(!uvm_config_db #(virtual axi_write_if)::get(this,"","vif",vif)) 
            `uvm_fatal(get_type_name(),"not set at top level");
    endfunction

    function void write_PORT_A(master_seq_item req);
        $display("Process push back in MASTER_ITEM");
        master_items.push_back(req);
    endfunction

    function void write_PORT_B(master_seq_item req);
        sub_items.push_back(req);
    endfunction

    task run_phase (uvm_phase phase);
        forever begin
            wait(vif.WLAST == 1'b1) begin
            if(master_items.size() != 0) begin
                master_seq_item newItem = master_items.pop_front() ;
                `uvm_info(get_type_name(),$sformatf("SCOREBOARD---------------"),UVM_NONE);
                `uvm_info(get_type_name(),$sformatf("Inside Master Item , Addr= %0h, AWLEN = %0h, AWSIZE=%0h, Data size= %0d",newItem.aw_addr,newItem.aw_len,newItem.aw_size,newItem.w_data.size()),UVM_NONE);
                foreach(newItem.w_data[i])
                    $display("%0h",newItem.w_data[i]);
            end else begin
                $display("Null queue");
               end //$stop;
            end
        end
    endtask

endclass 