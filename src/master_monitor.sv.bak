`ifndef MON_SV
`define MON_SV

`include "package.sv"
`include "master_seq_item.sv"

class master_monitor extends uvm_monitor;
    static byte counter = 0 ;
    virtual axi_write_if vif ;
    master_seq_item master_mon_item ;
    uvm_analysis_port #(master_seq_item) master_item_collect_port;
    `uvm_component_utils(master_monitor);
    
    function new(string name="master_monitor", uvm_component parent=null);
        super.new(name,parent);
        master_item_collect_port = new("master_item_collect_port",this) ; 
        master_mon_item = master_seq_item::type_id::create("master_mon_item",this) ; 
    endfunction

    function void build_phase (uvm_phase phase);
        super.build_phase(phase);
        if(!uvm_config_db #(virtual axi_write_if)::get(this,"","vif",vif)) 
            `uvm_fatal(get_type_name(),"not set at top level");
    endfunction
        
    task run_phase(uvm_phase phase);
        forever begin 
            @(posedge vif.CLK);
	    wait(vif.AWVALID && vif.AWREADY) begin
	    $display("Time m_monitor = %0t",$time);
            master_mon_item.aw_addr  = vif.AWADDR  ;
            master_mon_item.aw_len   = vif.AWLEN   ;
            master_mon_item.aw_size  = vif.AWSIZE  ;
            master_mon_item.aw_burst = vif.AWBUSRT ;
            end
	    if(vif.WVALID) begin
		master_mon_item.w_data[counter] = vif.WDATA;
		if(counter < vif.AWLEN)
		  counter++;
		else
		  counter = 0;
		end
	    if(vif.WLAST) begin
		$display("Time WLAST_CHECK = %0t",$time);
		foreach(master_mon_item.w_data[i])
		$display("Item w_data =%0h",master_mon_item.w_data[i]);
		master_item_collect_port.write(master_mon_item);    
		end
	end
endtask
endclass

`endif